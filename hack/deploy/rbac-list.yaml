apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb-operator
  labels:
    app: kubedb
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - "*"
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs: ["create", "delete", "get", "patch"]
- apiGroups:
  - ""
  resources:
  - services
  verbs: ["create", "delete", "get", "patch", "list"]
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs: ["create", "delete", "get", "patch"]
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs: ["create", "delete", "get", "patch", "update"]
- apiGroups:
  - batch
  resources:
  - jobs
  verbs: ["create", "delete", "get", "list", "watch"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["create", "delete", "get", "list", "patch", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "delete", "get", "update"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - kubedb.com
  resources:
  - '*'
  verbs: ['*']
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["create", "delete", "get", "list", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-operator
  labels:
    app: kubedb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb-operator
subjects:
- kind: ServiceAccount
  name: ${KUBEDB_SERVICE_ACCOUNT}
  namespace: ${KUBEDB_NAMESPACE}
---
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubedb-server-extension-server-authentication-reader
  namespace: kube-system
  labels:
    app: kubedb
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: ${KUBEDB_SERVICE_ACCOUNT}
  namespace: ${KUBEDB_NAMESPACE}
---
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-server-auth-delegator
  labels:
    app: kubedb
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: ${KUBEDB_SERVICE_ACCOUNT}
  namespace: ${KUBEDB_NAMESPACE}
